{"version":3,"sources":["index.js"],"names":["CountdownTimer","constructor","targetDate","selector","selectorRef","document","querySelector","daysRef","hoursRef","minsRef","secsRef","intID","deltaTime","start","setInterval","currentTime","Date","now","days","pad","Math","floor","hours","mins","secs","insertValues","value","String","padStart","textContent","timer"],"mappings":";AAAA,MAAMA,EACJC,aAAY,WAAEC,EAAF,SAAcC,IACnBC,KAAAA,YAAcC,SAASC,cAAcH,GACrCI,KAAAA,QAAU,KAAKH,YAAYE,cAAc,uBACzCE,KAAAA,SAAW,KAAKJ,YAAYE,cAAc,wBAC1CG,KAAAA,QAAU,KAAKL,YAAYE,cAAc,uBACzCI,KAAAA,QAAU,KAAKN,YAAYE,cAAc,uBACzCJ,KAAAA,WAAaA,EACbS,KAAAA,MAAQ,KACRC,KAAAA,UAAY,EAEZC,KAAAA,QAEPA,QACOF,KAAAA,MAAQG,YAAY,KACnBC,IAAAA,EAAcC,KAAKC,MAClBL,KAAAA,UAAY,KAAKV,WAAaa,EAE7BG,MAAAA,EAAO,KAAKC,IAAIC,KAAKC,MAAM,KAAKT,UAAa,QAC7CU,EAAQ,KAAKH,IACjBC,KAAKC,MAAO,KAAKT,UAAa,MAAyB,OAEnDW,EAAO,KAAKJ,IAAIC,KAAKC,MAAO,KAAKT,UAAa,KAAoB,MAClEY,EAAO,KAAKL,IAAIC,KAAKC,MAAO,KAAKT,UAAa,IAAc,MAC7Da,KAAAA,aAAaP,EAAMI,EAAOC,EAAMC,IACpC,KAGLL,IAAIO,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,KAGnCH,aAAaP,EAAMI,EAAOC,EAAMC,GACzBjB,KAAAA,QAAQsB,YAAcX,EACtBV,KAAAA,SAASqB,YAAcP,EACvBb,KAAAA,QAAQoB,YAAcN,EACtBb,KAAAA,QAAQmB,YAAcL,GAI/B,MAAMM,EAAQ,IAAI9B,EAAe,CAC/BE,WAAY,IAAIc,KAAK,gBACrBb,SAAU","file":"src.cc1613e1.js","sourceRoot":"../src","sourcesContent":["class CountdownTimer {\n  constructor({ targetDate, selector }) {\n    this.selectorRef = document.querySelector(selector);\n    this.daysRef = this.selectorRef.querySelector('[data-value=\"days\"]');\n    this.hoursRef = this.selectorRef.querySelector('[data-value=\"hours\"]');\n    this.minsRef = this.selectorRef.querySelector('[data-value=\"mins\"]');\n    this.secsRef = this.selectorRef.querySelector('[data-value=\"secs\"]');\n    this.targetDate = targetDate;\n    this.intID = null;\n    this.deltaTime = 0;\n\n    this.start();\n  }\n  start() {\n    this.intID = setInterval(() => {\n      let currentTime = Date.now();\n      this.deltaTime = this.targetDate - currentTime;\n\n      const days = this.pad(Math.floor(this.deltaTime / (1000 * 60 * 60 * 24)));\n      const hours = this.pad(\n        Math.floor((this.deltaTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n      );\n      const mins = this.pad(Math.floor((this.deltaTime % (1000 * 60 * 60)) / (1000 * 60)));\n      const secs = this.pad(Math.floor((this.deltaTime % (1000 * 60)) / 1000));\n      this.insertValues(days, hours, mins, secs);\n    }, 1000);\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  insertValues(days, hours, mins, secs) {\n    this.daysRef.textContent = days;\n    this.hoursRef.textContent = hours;\n    this.minsRef.textContent = mins;\n    this.secsRef.textContent = secs;\n  }\n}\n\nconst timer = new CountdownTimer({\n  targetDate: new Date('Dec 02, 2021'),\n  selector: '#timer-1',\n});\n"]}